name: PR Automation

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  auto-label:
    name: Auto Label PR
    runs-on: ubuntu-latest
    
    steps:
      - name: Label based on files changed
        uses: actions/labeler@v5
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}"
          configuration-path: .github/labeler.yml

  size-label:
    name: Add Size Label
    runs-on: ubuntu-latest
    
    steps:
      - name: Add size label
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const additions = pr.additions;
            const deletions = pr.deletions;
            const changes = additions + deletions;
            
            let size;
            if (changes < 10) size = 'size/XS';
            else if (changes < 50) size = 'size/S';
            else if (changes < 200) size = 'size/M';
            else if (changes < 500) size = 'size/L';
            else size = 'size/XL';
            
            // Remove existing size labels
            const { data: labels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number
            });
            
            for (const label of labels) {
              if (label.name.startsWith('size/')) {
                await github.rest.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                  name: label.name
                });
              }
            }
            
            // Add new size label
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              labels: [size]
            });

  pr-checks:
    name: PR Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Check PR title
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const title = pr.title;
            
            // Check conventional commit format
            const validPrefixes = ['feat', 'fix', 'docs', 'style', 'refactor', 'perf', 'test', 'build', 'ci', 'chore', 'revert'];
            const conventionalCommitRegex = new RegExp(`^(${validPrefixes.join('|')})(\\(.+\\))?!?: .+`);
            
            if (!conventionalCommitRegex.test(title)) {
              core.setFailed(`PR title doesn't follow conventional commit format. Valid prefixes: ${validPrefixes.join(', ')}`);
              
              // Add comment with guidance
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## ❌ PR Title Format Issue
                
Your PR title doesn't follow the [Conventional Commits](https://www.conventionalcommits.org/) format.

**Current title:** \`${title}\`

**Valid format:** \`<type>(<scope>): <description>\`

**Valid types:** ${validPrefixes.map(p => `\`${p}\``).join(', ')}

**Examples:**
- \`feat: add new persona validation\`
- \`fix(security): resolve XSS vulnerability\`
- \`docs: update contribution guidelines\`

Please update your PR title to follow this format.`
              });
            }

      - name: Check PR description
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            if (body.length < 50) {
              // Add comment requesting more details
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `## 📝 PR Description Request
                
Please provide a more detailed description of your changes. A good PR description should include:

- **What** changes you made
- **Why** you made these changes
- **How** to test the changes
- Any **breaking changes** or **migration steps**

This helps reviewers understand your contribution better and speeds up the review process.`
              });
            }

  trigger-claude-review:
    name: Trigger Claude Review
    runs-on: ubuntu-latest
    needs: [auto-label, size-label, pr-checks]
    if: always()
    
    steps:
      - name: Add Claude review comment
        uses: actions/github-script@v7
        with:
          script: |
            // Check if this is the first time running for this PR
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const claudeTriggerExists = comments.some(comment => 
              comment.body.includes('@claude') && 
              comment.user.login === 'github-actions[bot]'
            );
            
            if (!claudeTriggerExists) {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `@claude please review this pull request`
              });
            }