name: Security Audit

on:
  schedule:
    # Run daily at 2 AM UTC
    - cron: '0 2 * * *'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  issues: write

jobs:
  dependency-audit:
    name: Dependency Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: npm-audit
        run: |
          npm audit --json > npm-audit-report.json || true
          npm audit

      - name: Run better-npm-audit
        run: |
          npx better-npm-audit audit --level moderate

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: npm-audit-report
          path: npm-audit-report.json
          retention-days: 30

  content-security-scan:
    name: Content Security Scan
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run security pattern scan
        id: security-scan
        run: |
          node scripts/security-check.js --output sarif > security-scan.sarif

      - name: Upload SARIF results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: security-scan.sarif
          category: content-security

      - name: Create security report
        run: |
          echo "# üîí Security Scan Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          node scripts/security-check.js --output summary >> $GITHUB_STEP_SUMMARY

  license-check:
    name: License Compatibility Check
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check licenses
        run: |
          npx license-checker --production --summary --excludePrivatePackages > license-report.txt
          cat license-report.txt

      - name: Validate license compatibility
        run: |
          # Check for problematic licenses
          if grep -E "(GPL|AGPL|LGPL|SSPL)" license-report.txt | grep -v "AGPL-3.0"; then
            echo "‚ö†Ô∏è Found potentially incompatible licenses"
            exit 1
          fi
          echo "‚úÖ All licenses appear compatible"

  create-security-issue:
    name: Create Security Issue
    needs: [dependency-audit, content-security-scan, license-check]
    runs-on: ubuntu-latest
    if: failure() && github.event_name == 'schedule'
    
    steps:
      - name: Create security issue
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const title = `üö® Security Audit Failed - ${date}`;
            
            // Check if issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'security,automated'
            });
            
            const existingIssue = issues.find(issue => 
              issue.title.includes('Security Audit Failed') &&
              issue.title.includes(date)
            );
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: `## Security Audit Failure
                
The daily security audit has detected issues that require attention.

**Workflow Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
**Date:** ${date}

### Checks Performed
- ‚ùå Dependency vulnerability scan
- ‚ùå Content security pattern scan  
- ‚ùå License compatibility check

### Action Required
Please review the security findings and address any critical vulnerabilities immediately.

This issue was automatically created by the Security Audit workflow.`,
                labels: ['security', 'automated', 'high-priority']
              });
            }