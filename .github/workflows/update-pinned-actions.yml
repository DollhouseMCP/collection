name: Update Pinned Actions

on:
  schedule:
    # Run monthly on the 1st at 9 AM UTC
    - cron: '0 9 1 * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  update-actions:
    name: Update Pinned Actions
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Update pinned actions
        id: update
        run: |
          # Create a script to update action versions
          cat > update-actions.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Function to get latest version of an action
          get_latest_version() {
            local action=$1
            local owner=$(echo $action | cut -d'/' -f1)
            local repo=$(echo $action | cut -d'/' -f2)
            
            # Get the latest release
            latest=$(gh api repos/$owner/$repo/releases/latest --jq '.tag_name' 2>/dev/null || echo "")
            
            if [ -z "$latest" ]; then
              # If no releases, get the default branch's latest commit
              latest=$(gh api repos/$owner/$repo --jq '.default_branch' | xargs -I {} gh api repos/$owner/$repo/commits/{} --jq '.sha' | cut -c1-7)
            fi
            
            echo "$latest"
          }
          
          # Find all workflow files
          UPDATED=false
          for workflow in .github/workflows/*.yml; do
            echo "Checking $workflow..."
            
            # Extract action references
            grep -E 'uses:\s*[^/]+/[^/@]+@' "$workflow" | while read -r line; do
              action=$(echo "$line" | sed -E 's/.*uses:\s*([^@]+)@.*/\1/')
              current_version=$(echo "$line" | sed -E 's/.*@(.*)/\1/')
              
              # Skip local actions
              if [[ "$action" == "."* ]]; then
                continue
              fi
              
              latest_version=$(get_latest_version "$action")
              
              if [ -n "$latest_version" ] && [ "$current_version" != "$latest_version" ]; then
                echo "  Updating $action from $current_version to $latest_version"
                sed -i "s|$action@$current_version|$action@$latest_version|g" "$workflow"
                UPDATED=true
              fi
            done
          done
          
          if [ "$UPDATED" = true ]; then
            echo "updated=true" >> $GITHUB_OUTPUT
          else
            echo "updated=false" >> $GITHUB_OUTPUT
          fi
          EOF
          
          chmod +x update-actions.sh
          ./update-actions.sh
      
      - name: Create pull request
        if: steps.update.outputs.updated == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: update pinned GitHub Actions"
          title: "chore: update pinned GitHub Actions"
          body: |
            ## ðŸ”„ Automated GitHub Actions Update
            
            This PR updates pinned GitHub Actions to their latest versions for improved security and functionality.
            
            ### Security Benefits
            - Uses specific commit SHAs instead of mutable tags
            - Ensures reproducible builds
            - Protects against supply chain attacks
            
            ### Review Checklist
            - [ ] Verify all actions are from trusted sources
            - [ ] Check release notes for breaking changes
            - [ ] Ensure CI passes with new versions
            
            ---
            
            ðŸ¤– Generated by automated workflow
          branch: update-actions
          delete-branch: true
          labels: |
            dependencies
            automated
            github-actions