name: Extended Compatibility Testing

# Note: Tests Node.js version compatibility on Ubuntu only
# Collection is server-side infrastructure that runs on GitHub/cloud (Ubuntu)

on:
  schedule:
    # Run every Monday at 6 AM UTC
    - cron: '0 6 * * 1'
  workflow_dispatch:
    inputs:
      node_versions:
        description: 'Node.js versions to test (comma-separated)'
        required: false
        default: '22.x,24.x'

env:
  NODE_OPTIONS: --max-old-space-size=4096 --experimental-vm-modules
  CI: true

jobs:
  compatibility-matrix:
    name: Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: ['22.x', '24.x']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Display versions
        run: |
          echo "Node.js version: $(node --version)"
          echo "npm version: $(npm --version)"
          echo "OS: Ubuntu ($(lsb_release -d -s))"

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            node_modules
            .jest-cache
          key: ${{ runner.os }}-node${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node${{ matrix.node-version }}-

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Run all tests
        run: npm run test:all

      - name: Check TypeScript compatibility
        run: npx tsc --noEmit --skipLibCheck

      - name: Test CLI tools
        run: |
          node dist/cli/validate.js --help
          node dist/cli/security-check.js --help

      - name: Upload compatibility results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: compatibility-node${{ matrix.node-version }}-ubuntu
          path: |
            test-results/
            *.log
          retention-days: 30

  compatibility-report:
    name: Compatibility Report
    needs: compatibility-matrix
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate compatibility report
        run: |
          echo "# ðŸ”„ Extended Compatibility Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Date:** $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Matrix Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Platform | Node 22.x | Node 24.x |" >> $GITHUB_STEP_SUMMARY
          echo "|----------|-----------|-----------|" >> $GITHUB_STEP_SUMMARY
          echo "| Ubuntu | ${{ needs.compatibility-matrix.result }} | ${{ needs.compatibility-matrix.result }} |" >> $GITHUB_STEP_SUMMARY

      - name: Create issue if failed
        if: needs.compatibility-matrix.result == 'failure'
        uses: actions/github-script@v7
        with:
          script: |
            const date = new Date().toISOString().split('T')[0];
            const title = `ðŸš¨ Extended Compatibility Test Failed - ${date}`;
            
            // Check if issue already exists
            const { data: issues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: 'compatibility,automated'
            });
            
            const existingIssue = issues.find(issue => 
              issue.title.includes('Extended Compatibility Test Failed') &&
              issue.title.includes(date)
            );
            
            if (!existingIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: title,
                body: `## Compatibility Test Failure
                
The weekly extended compatibility tests have failed. 

**Workflow Run:** ${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}
**Date:** ${date}

### Action Required
Please investigate the failures and ensure compatibility across all supported Node.js versions and platforms.

This issue was automatically created by the Extended Compatibility Testing workflow.`,
                labels: ['compatibility', 'automated', 'bug']
              });
            }